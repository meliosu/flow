import runtime;

import nemo;
import verification;

// ∧
// ∨
// →

main() {
    example = "
        {(x = a ∧ y = b)}
        var x: int;
        var y: int;
        {
            x := (x + y);
            y := (x - y);
            x := (x - y);
        }
        {(x = b ∧ y = a)}
    ";


    triple = parseAst(example);

    println("AST:\n");
    println(triple);
    println("\n");

    if (isValidProgram(triple.program)) {
        vc = findVC(triple.pre, triple.program.body, triple.post);

        iterSet(
            vc,
            \formula -> println(cond2s(formula) + "\n")
        );
    } else {
        println("FAIL");
    }
}